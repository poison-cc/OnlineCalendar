#include "WiFi.h"
#include <HTTPClient.h>
#include <LiquidCrystal_I2C.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "Audio.h" // Make sure you have the necessary library for audio operations

// SSID and PASSWORD of your WiFi network
const char* ssid = "Abc";  //--> Your wifi name
const char* password = "12345678"; //--> Your wifi password
String errorText = "<!DOCTYPE html>";
// Google script Web_App_URL
String Web_App_URL = "https://script.google.com/macros/s/AKfycbwA7F0j9E71JM8I682JyIsCnrt1RlAv7GHT5rIMbFOC90Q_lpeDx7mTor8DZpanOgwF/exec";

// Pin configuration for I2S
#define I2S_BCLK 27
#define I2S_LRC 26
#define I2S_DOUT 25

Audio audio; // Create an instance of the Audio library
String payload;

// Function to read data from Google Sheets
void readGoogleSheetsTask(void * pvParameters) {
  while (true) {
    // Create a URL for reading or getting data from Google Sheets
    String Read_Data_URL = Web_App_URL + "?sts=read";

    Serial.println();
    Serial.println("-------------");
    Serial.println("Read data from Google Spreadsheet...");
    Serial.print("URL : ");
    Serial.println(Read_Data_URL);

    // Initialize HTTPClient as "http"
    HTTPClient http;

    // HTTP GET Request
    http.begin(Read_Data_URL.c_str());
    http.setFollowRedirects(HTTPC_STRICT_FOLLOW_REDIRECTS);

    // Gets the HTTP status code
    int httpCode = http.GET(); 
    Serial.print("HTTP Status Code : ");
    Serial.println(httpCode);

    // Getting response from google sheet
    if (httpCode > 0) {
      payload = http.getString();
      if (payload.substring(0,15) == errorText) {
        payload = "";
      }
    }
    http.end();
    delay(1000);
  }
}

// Function for audio operations
void audioTask(void * pvParameters) {
  while (true) {
    delay(1500);
    audio.setPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);
    audio.setVolume(100);

    int payload_len = payload.length() + 1;
    char payload_char[payload_len];
    payload.toCharArray(payload_char, payload_len);


    Serial.println(payload_char);
    audio.connecttospeech(payload_char, "en"); // Google TTS
    vTaskDelay(10000 / portTICK_PERIOD_MS); // Delay to prevent rapid repeated speech
  }
}

void setup() {
  // Start serial communication
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.mode(WIFI_STA);
  delay(1000);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Create the task that will read data from Google Sheets
  xTaskCreate(
    readGoogleSheetsTask,   // Task function
    "ReadGoogleSheets",     // Name of task
    10000,                  // Stack size in words
    NULL,                   // Task input parameter
    1,                      // Priority of the task
    NULL                    // Task handle
  );

  // Create the task that will handle audio operations
  xTaskCreate(
    audioTask,              // Task function
    "AudioTask",            // Name of task
    10000,                  // Stack size in words
    NULL,                   // Task input parameter
    1,                      // Priority of the task
    NULL                    // Task handle
  );
}

void loop() {
  // Empty loop as tasks are managed by FreeRTOS
  audio.loop();
}
